geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0, T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0|!is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0, T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0, T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
```{r 030/02/3/5/4/1, warning=F, message=F}
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
summarise(krs.zig$Raucherin==F)
krs.zig$Raucherin==F
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig$Raucherin==F
length(krs.zig$Raucherin==F)
sum(krs.zig$Raucherin==F)
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) #%>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
summarise(krs.zig$Raucherin==F)
sum(krs.zig$Raucherin==F)
sum(krs.zig$Raucherin==T)
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
ggplot(krs.zig, aes(x=Raucherin, y= MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y= MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
sleep%>%arrange(extra)
sleep%>%arrange(desc(extra))
sleep%>%arrange(group, extra)
head(arrange(krs, Geschlecht=="w", desc(Gross)))
head(arrange(krs, Geschlecht==c("m", "x"), desc(Gross)))
head(arrange(krs, Geschlecht==c("w", "x"), desc(Gross)))
head(arrange(krs, Geschlecht==m, desc(Gross)))
head(arrange(krs, Geschlecht=="m", desc(Gross)))
head(arrange(krs, Geschlecht==c("m", "x") , desc(Gross)))
head(arrange(krs, Geschlecht=="m" & Geschlecht=="x" , desc(Gross)))
head(arrange(krs, Geschlecht=="w" & Geschlecht=="x" , desc(Gross)))
head(arrange(krs, Geschlecht=="m", desc(Gross)))
krs%>%group_by(Id)%>%
summarise(MeanAge = mean(Alter))
krs%>%group_by(Id, everything())%>%
summarise(MeanAge = mean(Alter))
krs%>%group_by(everything())%>%
summarise(MeanAge = mean(Alter))
krs%>%group_by(everything)%>%
summarise(MeanAge = mean(Alter))
krs%>%group_by(everything())%>%
summarise(MeanAge = mean(Alter))
krs%>%group_by(Id)%>%
summarise(MeanAge = mean(Alter))
krs%>%summarise(MeanAge=mean(Alter, na.rm=F), MeanSem=mean(Semester, na.rm=F), MinSem=min(Semester, na.rm=F), MaxSem=max(Semester, na.rm=F))
krs%>%summarise(MeanAge=mean(Alter, na.rm=T), MeanSem=mean(Semester, na.rm=T), MinSem=min(Semester, na.rm=T), MaxSem=max(Semester, na.rm=T))
krs%>%summarise(MeanAge=mean(Alter, na.rm=T), MeanSem=mean(Semester, na.rm=T), MinSem=min(Semester, na.rm=T), MaxSem=max(Semester, na.rm=T))
krs.sum<- krs%>%group_by(Kurs, Geschlecht)%>%summarise(MeanHeight=mean(Gross, na.rm=T))
krs.sum
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) #%>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
```{r 030/02/3/5/4/1, warning=T, message=T}
ggplot(krs.zig, aes(x=Raucherin, y= MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=F), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=F), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig<- krs%>%filter(Geschlecht=="w")%>%mutate(Raucherin= ifelse(Zigaretten > 0 & !is.na(Zigaretten), T, F)) %>%group_by(Raucherin)%>%summarise(MeanGross=mean(Gross, na.rm=T), StdAb=max(Gross, na.rm=T)- min(Gross,na.rm=T))
krs.zig
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = Raucherin-StdAb,ymax = Raucherin+ StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = StdAb,ymax = StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
ggplot(krs.zig, aes(x=Raucherin, y=MeanGross, ymin = MeanGross-StdAb,ymax = MeanGross+StdAb))+geom_point(size=2) +
geom_errorbar(width=0)
library(tidyverse)
install.packages("ibex.tar.gz", repos=NULL)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
library(tidyverse)
library(tidyverse)
library(tidyverse)
install.packages("ibex.tar.gz", repos=NULL)
library(tidyverse)
install.packages("ibex.tar.gz", repos=NULL)
read.IBEX.to.R
library(tidyverse)
install.packages("ibex.tar.gz", repos=NULL)
read.IBEX.to.R
library(tidyverse)
install.packages("ibex.tar.gz", repos=NULL)
read.IBEX.to.R
library(tidyverse)
install.packages("ibex.tar.gz", repos=NULL)
read.IBEX.to.R
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("IBEX.to.R_0.9.tar.gz", repos=NULL)
install.packages("IBEX.to.R_0.9.tar", repos=NULL)
knitr::opts_chunk$set(echo = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.GZ", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
knitr::opts_chunk$set(echo = TRUE)
help(package = IBEX.to.R)
help(package = IBEX.to.R)
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
library(ibex.tar.gz)
library("ibex.tar.gz")
library("IBEX")
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
setwd("C:\Users\Thuy Dang\Desktop\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
help(package = IBEX.to.R)
install.packages("ibex.tar.gz", repos=NULL)
setwd("C:\Users\Thuy Dang\Desktop\Praktikum\ibex_project\metapher‚Äù)
install.packages("ibex.tar.gz", repos=NULL)
setwd(C:\Users\Thuy Dang\Desktop\Praktikum\ibex_project\metapher)
install.packages("ibex.tar.gz", repos=NULL)
setwd("D:\Praktikum\ibex_project\metapher")
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
setwd("D:\Praktikum\ibex_project\metapher")
options(scipen=999)
setwd("D:\Praktikum\ibex_project\metapher")
setwd("D:\Praktikum\ibex_project\metapher")
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", dependencies = TRUE)
help(package = IBEX.to.R)
help(package = IBEX.to.R)
install.packages("ibex.tar.gz", dependencies = TRUE)
install.packages("ibex.tar.gz", dependencies = TRUE)
install.packages("ibex.tar.gz", dependencies = TRUE)
install.packages("ibex.tar.gz", dependencies = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
#load packages
library(IBEX.to.R)
library(MASS)
library(stringi)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:\Praktikum\ibex_project‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
R CMD INSTALL -l /Praktikum/ibex_project/metapher ibex.tar.gz
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
R CMD INSTALL -l/Praktikum/ibex_project/metapher ibex.tar.gz
R CMD INSTALL -l /Praktikum/ibex_project/metapher ibex.tar.gz
R CMD INSTALL -l/Praktikum/ibex_project/metapher ibex.tar.gz
Rcmd INSTALL -l/Praktikum/ibex_project/metapher ibex.tar.gz
Rcmd INSTALL ibex.tar.gz
Rcmd INSTALL ibex.tar.gz
R cmd INSTALL ibex.tar.gz
R CMD INSTALL ibex.tar.gz
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
#load packages
library(IBEX.to.R)
library(MASS)
library(stringi)
library(lme4)
library(tidyr)
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
Rcmd INSTALL ibex.tar.gz
Rcmd INSTALL ibex.tar.gz
R CMD INSTALL ibex.tar.gz
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller= "DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller= "DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
data$value <- data[,11]
data$value <- data[,11]
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
#load packages
library(IBEX.to.R)
library(MASS)
library(stringi)
library(lmerTest)
library(lme4)
library(dplyr)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
processed<- get.results("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
get.results("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
get.results("results.csv", controller="DashedSentence")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
get.results.de("results.csv")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
get.results.ds("results.csv")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
get.results(result.csv, controller = "DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'
get.results("results.csv", controller = "DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
data$value <- data[,11]
install.packages("ibex.tar.gz", repos=NULL)
help(package = IBEX.to.R)
install.packages("IBEX.to.R_0.9.tar", repos=NULL)
install.packages("IBEX.to.R_0.9.tar")
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz")
help(package = IBEX.to.R)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
R CMD INSTALL -l /Praktikum/ibex_project/metapher ibex.tar.gz
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("D:/Programs/RStudio/bin/ibex.tar.gz", repos = NULL, type = "source")
#load packages
library(IBEX.to.R)
library(MASS)
library(stringi)
install.packages("stringi")
install.packages(lmerTest)
install.packages("lmerTest")
library(lme4)
#load packages
library(IBEX.to.R)
library(MASS)
library(stringi)
library(lmerTest)
library(lme4)
library(tidyr)
library(dplyr)
install.packages("tidyr")
library(tidyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:\Praktikum\ibex_project\metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.result("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = F, comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
setwd("D:/Praktikum/ibex_project/metapher‚Äù)
###remove scientific notation ????
options(scipen=999)
##import data using the function get.results from ibex.to.r
#####save them to another file callled 'processed'. get.result(????)
processed<- get.results("results.csv", controller="DashedSentenceCW")
####load the new file again. data(????)
data<-read.csv("processed", header = "F", comment.char = "#", encoding = "UTF-8" ,
col.names = paste0("V",seq_len(11)),
fill = TRUE)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", repos=NULL)
install.packages("ibex.tar.gz", dependencies = TRUE)
apt-get install r-base-dev
sudo apt-get install libcurl4-openssl-dev
install.packages("ibex.tar.gz", dependencies = TRUE)
install.packages("ibex.tar.gz", dependencies = TRUE)
install.packages("ibex.tar.gz", repos= NULL)
install.packages("ibex.tar.gz", repos= NULL)
help(package = IBEX.to.R)
source('~/R/win-library/pretest_learning_version.R')
source('~/R/win-library/pretest_learning_version.R')
"IBEX" %in% search()
source("IBEX.to.R")
install.packages("~/R/win-library/ibex.tar.gz", repos = NULL, type = "source")
source('~/R/win-library/pretest_learning_version.R')
source('~/R/win-library/pretest_learning_version.R')
